clc
b_matrix = [1 2 3 4; 5 6 7 8; 9 10 11 12; 13 14 15 16];
%b_matrix = [1 2 ; 3 4];
b_matrixTranspose = b_matrix'; %Taking tranpose of second matrix since the columns are passed through

%Each column of the initial matrix is first isolated, diagonalized with the
%correct number of zeroes, and accumulated/concatenated into a final matrix (b_signals)
b_signals = zeros(size(b_matrixTranspose,1),2*length(b_matrixTranspose)-1); %Final zero matrix to accumulate all diagonalized matrices
b_colTempAdj = []; %Adjusted Temporary Column Vector matrix i.e. diagonalized

%Iterate through each column to isolate columns (b_col)
for m = 1:length(b_matrixTranspose)
    b_col = diag(b_matrixTranspose(:,m)); %Diagonalizing the isolated column from original matrix

    requiredZeroFillLeft = zeros(size(b_matrixTranspose,1), m-1 );
    requiredZeroFillRight = zeros(size(b_matrixTranspose,1), size(b_matrixTranspose,1)-m); %Zero filled matrix on right side of the matrix
    
    b_colTempAdj = cat(2, requiredZeroFillLeft, b_col, requiredZeroFillRight); %Concatenate zerofilled matrices to both ends of diagonalized matrix
    b_signals = b_signals+b_colTempAdj; %Accumulate all adjusted diagonalized matrices
end 
b_signals

